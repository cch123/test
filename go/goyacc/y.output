state 0 //

    0 $accept: . program

    NUMBER  shift, and goto state 3

    expr     goto state 2
    program  goto state 1

state 1 // NUMBER [$end]

    0 $accept: program .  [$end]

    $end  accept

state 2 // NUMBER [$end]

    1 program: expr .  [$end]
    3 expr: expr . '+' expr  // assoc %left, prec 1

    $end  reduce using rule 1 (program)
    '+'   shift, and goto state 4

state 3 // NUMBER

    2 expr: NUMBER .  [$end, '+']

    $end  reduce using rule 2 (expr)
    '+'   reduce using rule 2 (expr)

state 4 // NUMBER '+'

    3 expr: expr '+' . expr  // assoc %left, prec 1

    NUMBER  shift, and goto state 3

    expr  goto state 5

state 5 // NUMBER '+' NUMBER [$end]

    3 expr: expr . '+' expr  // assoc %left, prec 1
    3 expr: expr '+' expr .  [$end, '+']  // assoc %left, prec 1

    $end  reduce using rule 3 (expr)
    '+'   reduce using rule 3 (expr)

