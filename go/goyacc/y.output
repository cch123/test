state 0 //

    0 $accept: . program

    NUMBER  shift, and goto state 3

    expr     goto state 2
    program  goto state 1

state 1 // NUMBER [$end]

    0 $accept: program .  [$end]

    $end  accept

state 2 // NUMBER [$end]

    1 program: expr .  [$end]
    9 expr: expr . bin_op expr

    $end  reduce using rule 1 (program)
    '*'   shift, and goto state 9
    '+'   shift, and goto state 7
    '-'   shift, and goto state 8
    GTE   shift, and goto state 5
    LTE   shift, and goto state 6
    NEQ   shift, and goto state 4

    bin_op  goto state 10

state 3 // NUMBER

    8 expr: NUMBER .  [$end, '*', '+', '-', GTE, LTE, NEQ]

    $end  reduce using rule 8 (expr)
    '*'   reduce using rule 8 (expr)
    '+'   reduce using rule 8 (expr)
    '-'   reduce using rule 8 (expr)
    GTE   reduce using rule 8 (expr)
    LTE   reduce using rule 8 (expr)
    NEQ   reduce using rule 8 (expr)

state 4 // NUMBER NEQ

    2 bin_op: NEQ .  [NUMBER]  // assoc %left, prec 1

    NUMBER  reduce using rule 2 (bin_op)

state 5 // NUMBER GTE

    3 bin_op: GTE .  [NUMBER]  // assoc %left, prec 1

    NUMBER  reduce using rule 3 (bin_op)

state 6 // NUMBER LTE

    4 bin_op: LTE .  [NUMBER]  // assoc %left, prec 1

    NUMBER  reduce using rule 4 (bin_op)

state 7 // NUMBER '+'

    5 bin_op: '+' .  [NUMBER]  // assoc %left, prec 1

    NUMBER  reduce using rule 5 (bin_op)

state 8 // NUMBER '-'

    6 bin_op: '-' .  [NUMBER]  // assoc %left, prec 1

    NUMBER  reduce using rule 6 (bin_op)

state 9 // NUMBER '*'

    7 bin_op: '*' .  [NUMBER]  // assoc %left, prec 2

    NUMBER  reduce using rule 7 (bin_op)

state 10 // NUMBER '*' [NUMBER]

    9 expr: expr bin_op . expr

    NUMBER  shift, and goto state 3

    expr  goto state 11

state 11 // NUMBER '*' NUMBER [$end]

    9 expr: expr . bin_op expr
    9 expr: expr bin_op expr .  [$end, '*', '+', '-', GTE, LTE, NEQ]

    $end  reduce using rule 9 (expr)
    '*'   shift, and goto state 9
    '+'   shift, and goto state 7
    '-'   shift, and goto state 8
    GTE   shift, and goto state 5
    LTE   shift, and goto state 6
    NEQ   shift, and goto state 4

    bin_op  goto state 10

    conflict on '*', shift, and goto state 9, reduce using rule 9 // '*': assoc %left, prec 2
    conflict on '+', shift, and goto state 7, reduce using rule 9 // '+': assoc %left, prec 1
    conflict on '-', shift, and goto state 8, reduce using rule 9 // '-': assoc %left, prec 1
    conflict on GTE, shift, and goto state 5, reduce using rule 9 // GTE: assoc %left, prec 1
    conflict on LTE, shift, and goto state 6, reduce using rule 9 // LTE: assoc %left, prec 1
    conflict on NEQ, shift, and goto state 4, reduce using rule 9 // NEQ: assoc %left, prec 1

